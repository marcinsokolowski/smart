#!/bin/bash

obsid=1150234552
if [[ -n "$1" && "$1" != "-" ]]; then
    obsid=$1
fi
ms=1150234552_20160617213542.ms

options=""
n_iter=0
if [[ -n "$2" && "$2" != "-" ]]; then
   n_iter=$2
fi

do_casa=0
if [[ -n "$3" && "$3" != "-" ]]; then
   do_casa=$3
fi


if [[ $n_iter -gt 0 ]]; then
   options="-joinpolarizations"
fi


NCPUS=4
imagesize=2048

metafits=20160617213542.metafits
metainfo=${metafits%%metafits}metadata_info

if [[ -s $metafits ]]; then
   echo "Metafits file $metafits found -> nothing to be done"
else
   echo "WARNING : metafits file $metafits does not exist -> getting ..."

   echo "wget http://mwa-metadata01.pawsey.org.au/metadata/fits/?obs_id=${obsid} -O ${obsid}.metafits"
   wget http://mwa-metadata01.pawsey.org.au/metadata/fits/?obs_id=${obsid} -O ${obsid}.metafits
fi

path=./metadata_auto.py
echo "~/anaconda/bin/python $path ${metafits} --all"
~/anaconda/bin/python $path ${metafits} --all

n_scans=592
inttime=0.5
max_baseline_int=-1
pixscale=0.08

if [[ -s $metainfo ]]; then
   echo "OK : file $metainfo exists -> continuing processing"   
   
   n_scans=`grep N_SCANS $metainfo | awk '{print $3;}'`
   inttime=`grep INTTIME $metainfo | awk '{print $3;}'`
   max_baseline=`grep MAX_BASELINE $metainfo | awk '{print $3;}'`
   max_baseline_int=`echo $max_baseline | awk '{printf("%d",$1);}'`
   pixscale=`cat $metainfo | grep PIXSCALE | awk '{print $6}'`
   
   echo "Extracted metadata :"
   echo "   n_scans      = $n_scans"
   echo "   inttime      = $inttime"
   echo "   max_baseline_int = $max_baseline_int"
   echo "   pixscale     = $pixscale"
else
   echo "ERROR : file $metainfo not created -> cannot continue"
   exit -2;
fi

echo "------------------------------------------------------------"
echo "cat ${metainfo}"
cat ${metainfo}
echo "------------------------------------------------------------"



# old 
# echo "wsclean -name wsclean_${obsid} -j $NCPUS -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -abs-mem 64 -weight briggs -1 -scale $pixscale -niter ${n_iter} ${options} ${ms}"
# wsclean -name wsclean_${obsid} -j $NCPUS -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -abs-mem 64 -weight briggs -1 -scale $pixscale -niter ${n_iter} ${options} ${ms}

# if [[ $obsnum -gt 1219795217 ]]; then
if [[ $max_baseline_int -lt 2800 ]]; then # 20190309 - changed for a proper condition 
    # gps >= 20180901_000000 1219795217  -> compact configuration 
    # log : wsclean_${b}_timeindex${time_index}.out
    # removed : -minuv-l 30
    # echo "GPS time > 1219795217 ( 20180901_000000 ) -> using COMPACT CONFIGURATION SETTINGS"
    echo "max_baseline_int = $max_baseline_int < 2800 -> using COMPACT CONFIGURATION SETTINGS"
    
    echo "wsclean -name wsclean_${obsid}_full -j 6 -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -absmem 64 -weight briggs -1 -scale $pixscale -niter ${n_iter} ${options} ${ms}"
    wsclean -name wsclean_${obsid}_full -j 6 -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -absmem 64 -weight briggs -1 -scale $pixscale -niter ${n_iter} ${options} ${ms}
else
    # GPS time <= 1219795217 ( 20180901_000000 ) -> using LONG-BASELINES SETTINGS"
    echo "max_baseline_int = $max_baseline_int >= 2800 -> using LONG-BASELINES SETTINGS"

    # gps <= 20180901_000000 1219795217  -> compact configuration 
    # removed : -minuv-l 30
    echo "wsclean -name wsclean_${obsid}_natural -j 6 -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -absmem 64 -weight natural -scale $pixscale -niter ${n_iter} ${options} ${ms}"
    wsclean -name wsclean_${obsid}_natural -j 6 -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -absmem 64 -weight natural -scale $pixscale -niter ${n_iter} ${options} ${ms}

    echo "wsclean -name wsclean_${obsid}_uniform -j 6 -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -absmem 64 -weight uniform -scale $pixscale -niter ${n_iter} ${options} ${ms}"
    wsclean -name wsclean_${obsid}_uniform -j 6 -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -absmem 64 -weight uniform -scale $pixscale -niter ${n_iter} ${options} ${ms}

    echo "wsclean -name wsclean_${obsid}_briggs-1 -j 6 -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -absmem 64 -weight briggs -1 -scale $pixscale -niter ${n_iter} ${options} ${ms}"
    wsclean -name wsclean_${obsid}_briggs-1 -j 6 -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -absmem 64 -weight briggs -1 -scale $pixscale -niter ${n_iter} ${options} ${ms}
fi    



# long baselines :
# wsclean -name wsclean_${obsid} -j $NCPUS -size ${imagesize} ${imagesize}  -pol XX,YY,XY,YX -absmem 64 -weight natural -scale $pixscale -interval ${time_index} ${time_index2} ${options} ${ms}


if [[ $do_casa -gt 0 ]]; then
   if [[ ! -s ./image_tile_auto.py ]]; then
      echo "cp $AAVS_SCRIPTS/image_tile_auto.py ."
      cp $AAVS_SCRIPTS/image_tile_auto.py .   
   fi

   echo "casapy --nogui --nologger -c ./image_tile_auto.py --imagesize=1024 --pols=XX ${ms}"
   casapy --nogui --nologger -c ./image_tile_auto.py --imagesize=1024 --pols=XX ${ms}
else
   echo "WARNING : CASA image is not required"
fi   
